{"version":3,"file":"cells-semaas-adapter.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants.js","../src/utils.js","../src/adapters/omega.js","../src/adapters/rho.js","../src/adapters/index.js","../src/connector.js","../src/decorators.js","../src/queue.js","../src/semaas.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","const SEMAAS_REQUIRED_FIELDS = [\n  'consumerId',\n  'policy',\n  'mrId',\n  'nameSpace',\n  'region',\n  'dnsTld',\n  'tsec2JWTEndpoint',\n  'tsecStorageKey',\n];\n\nconst SEMAAS = {\n  DEFAULT_ADAPTER_IDENTIFIER: 'application',\n  DEFAULT_ADAPTER_VERSION: 'v1',\n  REQUIRED_FIELDS: SEMAAS_REQUIRED_FIELDS,\n  ALLOWED_FIELDS: [\n    ...SEMAAS_REQUIRED_FIELDS,\n    'identifier',\n    'version',\n    'logLevel',\n  ],\n};\n\nconst buildServiceUri = codename => (region, dnsTld, version) => `https://${codename}.${[region, dnsTld].filter(Boolean).join('.')}/${version}`;\n\nconst RHO = {\n  HOST: buildServiceUri('rho'),\n  ALLOWED_FIELDS: [\n    'mrId',\n    'spanId',\n    'startDate',\n    'finishDate',\n    'name',\n    'parentSpan',\n    'traceId',\n    'properties',\n    'duration',\n    'recordDate',\n  ],\n  REQUIRED_FIELDS: [],\n};\n\nconst DEFAULT_LOG_LEVEL = 'debug';\n\nconst OMEGA = {\n  HOST: buildServiceUri('omega'),\n  DEFAULT_LOG_LEVEL,\n  ALLOWED_FIELDS: [\n    'mrId',\n    'spanId',\n    'traceId',\n    'creationDate',\n    'level',\n    'message',\n    'properties',\n  ],\n  MAXIMUM_BULK_SIZE: 1000,\n  REQUIRED_FIELDS: [],\n  LOG_LEVELS: [\n    DEFAULT_LOG_LEVEL,\n    'info',\n    'warn',\n    'warning',\n    'error',\n    'fatal',\n  ],\n};\n\n// const TSEC2JWT = {\n//   HOST: environment => `https://tsec2jwt.smlb.${environment}.meigas.cloud/v1/Token`,\n// };\n\nexport default {\n  SEMAAS,\n  RHO,\n  OMEGA,\n  // TSEC2JWT,\n};\n","// credits to GeenenTijd/dotify\n// https://github.com/GeenenTijd/dotify/blob/master/dotify.js\nconst dotify = (obj) => {\n  const SEPARATOR_KEY = '_';\n  const res = {};\n  const recurse = (obj, current) => {\n    Object.keys(obj).forEach((key) => {\n      const value = obj[key];\n      const newKey = (current ? current + SEPARATOR_KEY + key : key); // joined key with dot\n      if (value && typeof value === 'object') {\n        recurse(value, newKey); // it's a nested object, so do it again\n      } else {\n        res[newKey] = value; // it's not an object, so set the property\n      }\n    });\n  };\n\n  recurse(obj);\n  return res;\n};\nconst sanitizeObj = (obj, allowedFields) => {\n  const result = { ...obj };\n\n  Object.keys(result).forEach((prop) => {\n    if (!allowedFields.includes(prop)) {\n      delete result[prop];\n    }\n  });\n\n  if (result.properties) {\n    result.properties = dotify(result.properties);\n  }\n\n  return result;\n};\nconst hasProperty = obj => field => Object.prototype.hasOwnProperty.call(obj, field) && !!obj[field];\nconst hasProperties = (obj, expectedFields) => expectedFields.every(hasProperty(obj));\nconst groupBy = (items, value) => items.reduce((prev, current) => {\n  const key = value instanceof Function ? value(current) : current[value];\n  const itemsContainingKey = prev.find(r => r && r.key === key);\n\n  if (itemsContainingKey) {\n    itemsContainingKey.values.push(current);\n  } else {\n    prev.push({ key, values: [current] });\n  }\n\n  return prev;\n}, []);\nconst createUUID = () => {\n  const s = [];\n  const hexDigits = '0123456789abcdef';\n  for (let i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = '-';\n\n  const uuid = s.join('');\n  return uuid;\n};\n\nexport default {\n  dotify,\n  sanitizeObj,\n  hasProperty,\n  hasProperties,\n  groupBy,\n  createUUID,\n};\n","import Constants from '../constants';\nimport Utils from '../utils';\n\nconst { OMEGA } = Constants;\nconst { DEFAULT_LOG_LEVEL, ALLOWED_FIELDS } = OMEGA;\nconst { sanitizeObj } = Utils;\n\nexport default class Omega {\n  constructor(mrId) {\n    this.mrId = mrId;\n  }\n\n  // @TODO renombrar a normalizeLog? buildLog?\n  /* static */\n  createLog(obj) {\n    const { mrId } = this;\n    const sanitizedData = sanitizeObj(obj, ALLOWED_FIELDS);\n    const DEFAULT_LOG = {\n      mrId,\n      creationDate: Date.now() * 1000000,\n      level: DEFAULT_LOG_LEVEL,\n    };\n\n    return {\n      ...DEFAULT_LOG,\n      ...sanitizedData,\n    };\n  }\n}\n","import Constants from '../constants';\nimport Utils from '../utils';\n\nconst { RHO } = Constants;\nconst { ALLOWED_FIELDS } = RHO;\nconst { sanitizeObj, createUUID } = Utils;\n\nclass Span {\n  constructor(config) {\n    this.spanId = null;\n    this.initialize(config);\n  }\n\n  initialize(config) {\n    ALLOWED_FIELDS.forEach((field) => {\n      if (config[field]) {\n        this[field] = config[field];\n      }\n    });\n\n    this.spanId = createUUID();\n    this.start();\n  }\n\n  start() {\n    this.startDate = Date.now() * 1000000;\n  }\n\n  finish() {\n    this.finishDate = Date.now() * 1000000;\n  }\n}\n\nexport default class Rho {\n  constructor(mrId) {\n    this.mrId = mrId;\n  }\n\n  createUUID() {\n    return createUUID();\n  }\n\n  createSpan(rawData, childSpanPrefix) {\n    const { mrId: DEFAULT_MR_ID } = this;\n    const { mrId = DEFAULT_MR_ID, parentSpan } = rawData;\n    const normalizedParentSpan = this.getParentSpan(parentSpan, mrId, childSpanPrefix);\n    const data = {\n      ...rawData,\n      mrId,\n      parentSpan: normalizedParentSpan,\n    };\n    const span = new Span(data);\n\n    return span;\n  }\n\n  buildSpans(data) {\n    const iterableData = Array.isArray(data) ? [...data] : [data];\n\n    return iterableData.map(item => sanitizeObj(item, ALLOWED_FIELDS));\n  }\n\n  getParentSpan(parentSpan, mrId, childSpanPrefix) {\n    if (!parentSpan) {\n      return null;\n    }\n\n    return [childSpanPrefix, mrId, 'spans', parentSpan].join('/');\n  }\n}\n","import Omega from './omega';\nimport Rho from './rho';\n\nexport default {\n  Omega,\n  Rho,\n};\n","function request(method) {\n  return async (options) => {\n    const { url, body, headers } = options;\n    const configuration = {\n      method,\n      body: JSON.stringify(body),\n      headers: {\n        'content-type': 'application/json',\n      },\n    };\n\n    if (headers) {\n      Object.keys(headers).forEach((header) => {\n        const headerValue = headers[header];\n\n        configuration.headers[header] = headerValue;\n      });\n    }\n\n    // OJO!!!\n    // Interceptar aquí errores\n    const response = await fetch(url, configuration);\n    let result = {};\n    try {\n      result = await response.json();\n    } catch (e) {\n      // empty server response...couldn't be proccessed but still OK\n    }\n\n    if (!response.ok && result && result.status !== 400) {\n      return null; \n    }\n\n    return result;\n  };\n}\n\nconst METHODS = {\n  GET: request('get'),\n  POST: request('post'),\n};\n\nexport default class Connector {\n  static async get(url, headers) {\n    return METHODS.GET({ url, headers });\n  }\n\n  static async post(url, body, headers) {\n    return METHODS.POST({ url, body, headers });\n  }\n}\n","/** Default debounce duration (in ms) */\nexport const DEFAULT_DEBOUNCE_DURATION = 500;\n\n/** Decorates a class method so that it is debounced by the specified duration */\nexport function outerDecorator(duration) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        // Attach this function to the instance (not the class)\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: debounce(descriptor.value, duration),\n        });\n\n        return this[key];\n      },\n    };\n  };\n}\n\n/** Debounces the specified function and returns a wrapper function */\nexport function debounce(method, duration = DEFAULT_DEBOUNCE_DURATION) {\n  let timeoutId;\n\n  function debounceWrapper(...args) {\n    debounceWrapper.clear();\n\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      method.apply(this, args);\n    }, duration);\n  }\n\n  debounceWrapper.clear = function () {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  };\n\n  return debounceWrapper;\n}\n\nconst decorate = decorators => (obj, prop, descriptor) => {\n  let fn = descriptor.value;\n\n  decorators.slice().reverse().forEach(decorator => fn = decorator(fn));\n\n  return {\n    ...descriptor,\n    value: fn,\n  };\n};\n\nexport default {\n  outerDecorator,\n  decorate,\n};\n","import Utils from './utils';\n\nconst { groupBy } = Utils;\n\nconst MAXIMUM_BULK_SIZE = 1000;\n\nexport default class Queue {\n  // maximumBulkSize = null;\n\n  constructor(identifier) {\n    this.items = [];\n    this.identifier = identifier;\n  }\n\n  add(endpoint, data) {\n    const iterableData = Array.isArray(data) ? [...data] : [data];\n\n    iterableData.forEach((item) => {\n      const operation = {\n        data: item,\n        endpoint,\n      };\n\n      this.items.push(operation);\n    });\n  }\n\n  dump(/* maximumBulkSize */) {\n    if (!this.any()) {\n      return null;\n    }\n\n    const queueGroupedByEndpoint = groupBy(this.items, 'endpoint');\n    const { values: firstQueueGroup } = queueGroupedByEndpoint[0];\n    const bulk = firstQueueGroup.slice(0, MAXIMUM_BULK_SIZE);\n    const newQueue = this.items.filter(item => !bulk.includes(item));\n\n    console.log(`Dumping ${bulk.length} items from ${this.identifier} queue (${this.items.length})...`);\n\n    this.items = newQueue;\n\n    return bulk;\n  }\n\n  any() {\n    return this.items !== null && this.items.length > 0;\n  }\n}\n","import 'regenerator-runtime/runtime';\nimport Adapters from './adapters';\nimport Connector from './connector';\nimport Constants from './constants';\nimport Utils from './utils';\nimport Decorators from './decorators';\nimport Queue from './queue';\n\nconst { Omega, Rho } = Adapters;\nconst {\n  SEMAAS: {\n    REQUIRED_FIELDS,\n    ALLOWED_FIELDS,\n    DEFAULT_ADAPTER_IDENTIFIER,\n    DEFAULT_ADAPTER_VERSION,\n  },\n  OMEGA: { HOST: OMEGA_HOST, DEFAULT_LOG_LEVEL, LOG_LEVELS },\n  RHO: { HOST: RHO_HOST },\n} = Constants;\nconst { hasProperties } = Utils;\nconst { outerDecorator } = Decorators;\n\nexport default class SEMaaS {\n  constructor(config) {\n    // configurable properties by constructor\n    this.nameSpace = null;\n\n    this.identifier = DEFAULT_ADAPTER_IDENTIFIER;\n\n    this.mrId = null;\n\n    this.consumerId = null;\n\n    this.policy = null;\n\n    this.region = null;\n\n    this.dnsTld = null;\n\n    this.version = DEFAULT_ADAPTER_VERSION;\n\n    this.tsec2JWTEndpoint = null;\n\n    this.logLevel = DEFAULT_LOG_LEVEL;\n\n    // properties that belong to semaas life cycle and rely on configurable properties\n    this.apiKey = null;\n\n    // composition entitys\n    this.omega = null;\n\n    this.rho = null;\n\n    this.queue = null;\n\n    this.tsecStorageKey = 'tsec'; // sessionStorage key for recovery the tsec id\n    this.setup(config);\n  }\n\n  setup(config) {\n    if (!config || !this.validateConfig(config, REQUIRED_FIELDS)) {\n      throw new Error(`Invalid setup for SEMaaS adapter (${this.identifier}). Required fields: ${REQUIRED_FIELDS.join(', ')}.`);\n    }\n\n    this.initialize(config);\n  }\n\n  validateConfig(config, expectedFields) {\n    return hasProperties(config, expectedFields);\n  }\n\n  initialize(config) {\n    ALLOWED_FIELDS.forEach((field) => {\n      if (config[field]) {\n        this[field] = config[field];\n      }\n    });\n\n    const {\n      nameSpace,\n      identifier,\n      mrId,\n      tsec2JWTEndpoint,\n      region,\n      dnsTld,\n      version,\n      logLevel,\n      tsecStorageKey,\n    } = this;\n\n    this.omega = new Omega(mrId);\n    this.rho = new Rho(mrId);\n    this.queue = new Queue(identifier);\n\n    console.info(`SEMaaS adapter for ${region} (TSEC: ${tsec2JWTEndpoint}) [${dnsTld} - ${version}] (${identifier} - ns: ${nameSpace}, mrId: ${mrId}) [logLevel: ${logLevel}] [tsecStorageKey: ${tsecStorageKey}] successfully initialized.`);\n  }\n\n  log(obj) {\n    const data = this.omega.createLog(obj);\n\n    if (this.shouldIncludeLog(data.level, this.logLevel)) {\n      this.enqueue(this.omegaEndpoint, data);\n    }\n  }\n\n  ingest(spans) {\n    const data = this.rho.buildSpans(spans);\n\n    this.enqueue(this.rhoEndpoint, data);\n  }\n\n  createSpan(data) {\n    const span = this.rho.createSpan(data, this.prefixForChildSpan);\n\n    return span;\n  }\n\n  createUUID() {\n    const UUID = this.rho.createUUID();\n\n    return UUID;\n  }\n\n  async send(url, body, headers) {\n    let result;\n\n    try {\n      result = await Connector.post(url, body, headers);\n    } catch (e) { }\n\n    if (!result) {\n      console.log('There was a problem while sending data to SEMaaS - operation will be queued.');\n      this.enqueue(url, body);\n    } else if(result.status === 400){\n      throw new Error(result.message);\n    }\n\n    return result;\n  }\n\n  enqueue(url, body) {\n    this.queue.add(url, body);\n    this.flush();\n  }\n\n  // @decorate([tsec2jwt, outerDecorator(5000)])\n  @outerDecorator(5000)\n  async flush() {\n    const requestData = await this.getRequestData();\n\n    if (!requestData) {\n      return;\n    }\n\n    const { endpoint, body, headers } = requestData;\n\n    // if bulk send is OK, and there are more items, we try to flush the buffer\n    this.send(endpoint, body, headers).then(() => this.queue.any() && this.flush()).catch((error)=>{console.error(`There was a problem while sending data to SEMaaS - ${error.message}`)});\n  }\n\n  async flushAll() {\n    const requestData = await this.getRequestData();\n\n    if (!requestData) {\n      return Promise.resolve();\n    }\n\n    const { endpoint, body, headers } = requestData;\n\n    return this.send(endpoint, body, headers).catch((error)=>{console.error(`There was a problem while sending data to SEMaaS - ${error.message}`)});\n  }\n\n  async getRequestData() {\n    const validApiKey = await this.ensureValidApiKey();\n\n    if (!validApiKey) {\n      console.log(`No valid API Key for SEMaaS adapter (${this.identifier}) - aborting operation`);\n      return;\n    }\n\n    const bulk = this.queue.dump();\n\n    if (!bulk) {\n      console.log(`Empty queue for SEMaaS adapter (${this.identifier})`);\n      return;\n    }\n\n    const { endpoint } = bulk[0];\n    const { apiKey } = this;\n\n    console.log(`Sending queued batch ${endpoint} - ${apiKey}`);\n\n    const body = bulk.map(operation => operation.data);\n    const headers = this.buildApiHeaders();\n\n    return {\n      endpoint,\n      body,\n      headers,\n    };\n  }\n\n  async ensureValidApiKey() {\n    if (this.hasApiKey) {\n      console.log('ApiKey OK -> next()');\n      return true;\n    } if (this.hasCredentials) {\n      console.log('ApiKey KO, Credentials OK -> getApiKey()');\n      return this.getApiKey();\n    }\n\n    console.log('No ApiKey && No Credentials -> KO');\n    return false;\n  }\n\n  buildApiHeaders() {\n    let key;\n    let value;\n\n    switch (this.version.toLowerCase()) {\n      case 'v1':\n        key = 'Authorization';\n        value = `Bearer ${this.apiKey}`;\n        break;\n      default:\n        key = 'Api-Key';\n        value = `jwt ${this.apiKey}`;\n        break;\n    }\n\n    return { [key]: value };\n  }\n\n  async getApiKey() {\n    const {\n      consumerId,\n      policy,\n      tsec2JWTEndpoint,\n    } = this;\n    const headers = {\n      'x-consumer-id': consumerId,\n      'x-tsec-token': window.sessionStorage.getItem('tsec'),\n      'x-validation-policy': policy,\n    };\n    const host = tsec2JWTEndpoint;\n    const result = await Connector.get(host, headers);\n\n    if (!result) {\n      return null;\n    }\n\n    const { accessToken } = result;\n\n    this.apiKey = accessToken;\n    return accessToken;\n  }\n\n  get hasApiKey() {\n    // @TODO añadir lógica recuperación + persistencia sessionStorage jwt\n    return !!this.apiKey;\n  }\n\n  get hasCredentials() {\n    return !!this.consumerId && !!this.policy && !!this.tsec;\n  }\n\n  get initialized() {\n    return !!this.omega && !!this.rho;\n  }\n\n  get omegaEndpoint() {\n    const { nameSpace } = this;\n    const host = this.getEndpoint(OMEGA_HOST);\n\n    return `${host}/ns/${nameSpace}/logs`;\n  }\n\n  get rhoEndpoint() {\n    const { nameSpace } = this;\n    const host = this.getEndpoint(RHO_HOST);\n\n    return `${host}/ns/${nameSpace}/spans`;\n  }\n\n  get prefixForChildSpan() {\n    return `ns/${this.nameSpace}/mrs`;\n  }\n\n  get tsec() {\n    return window.sessionStorage.getItem(this.tsecStorageKey);\n  }\n\n  getEndpoint(host) {\n    const { region, dnsTld, version } = this;\n\n    return host(region, dnsTld, version);\n  }\n\n  shouldIncludeLog(logLevel, applicationLogLevel = DEFAULT_LOG_LEVEL) {\n    const getLogLevel = target => LOG_LEVELS.indexOf(target.toLowerCase());\n    const targetLogLevel = getLogLevel(logLevel);\n    const minimumLogLevel = getLogLevel(applicationLogLevel);\n\n    return (targetLogLevel >= minimumLogLevel);\n  }\n}\n"],"names":["global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","constructor","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","then","result","done","value","toString","keys","object","key","push","reverse","length","pop","Context","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","type","rval","exception","context","handle","loc","caught","i","entry","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","finallyEntry","complete","afterLoc","thrown","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","dispatchException","abrupt","tryCatch","makeInvokeMethod","fn","obj","err","defineIteratorMethods","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","reset","iteratorMethod","Function","SEMAAS_REQUIRED_FIELDS","buildServiceUri","region","dnsTld","version","codename","filter","Boolean","join","dotify","res","recurse","current","newKey","hasProperty","field","allowedFields","prop","includes","properties","expectedFields","every","items","reduce","itemsContainingKey","find","r","s","substr","Math","floor","random","OMEGA","Constants","DEFAULT_LOG_LEVEL","ALLOWED_FIELDS","sanitizeObj","Utils","Omega","mrId","sanitizedData","DEFAULT_LOG","Date","now","RHO","createUUID","Span","config","spanId","initialize","start","startDate","finishDate","rawData","childSpanPrefix","DEFAULT_MR_ID","parentSpan","normalizedParentSpan","getParentSpan","data","Array","isArray","map","item","request","options","url","body","headers","JSON","stringify","header","headerValue","fetch","configuration","response","json","ok","status","METHODS","Connector","GET","POST","DEFAULT_DEBOUNCE_DURATION","duration","target","descriptor","enumerable","defineProperty","timeoutId","debounceWrapper","args","clear","setTimeout","apply","_this","debounce","groupBy","Queue","identifier","endpoint","operation","any","bulk","newQueue","log","Adapters","Rho","SEMAAS","REQUIRED_FIELDS","DEFAULT_ADAPTER_IDENTIFIER","DEFAULT_ADAPTER_VERSION","OMEGA_HOST","HOST","LOG_LEVELS","RHO_HOST","hasProperties","Decorators","nameSpace","consumerId","policy","tsec2JWTEndpoint","logLevel","apiKey","omega","rho","queue","tsecStorageKey","setup","validateConfig","createLog","shouldIncludeLog","level","enqueue","omegaEndpoint","spans","buildSpans","rhoEndpoint","createSpan","prefixForChildSpan","post","message","add","flush","getRequestData","requestData","send","_this2","catch","error","ensureValidApiKey","dump","buildApiHeaders","hasApiKey","hasCredentials","getApiKey","toLowerCase","window","sessionStorage","getItem","get","host","accessToken","applicationLogLevel","getLogLevel","indexOf","tsec","getEndpoint"],"mappings":"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"}